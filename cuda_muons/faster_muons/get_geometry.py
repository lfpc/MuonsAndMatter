import numpy as np
import torch

def get_sample_arb8s():
    arb8s = []

    arb8s.append(np.array([[0., -1.799, -10.0640477],
              [0., 1.799, -10.0640477],
              [0.5, 1.299, -10.0640477],
              [0.5, -1.299, -10.0640477],
              [0., -1.799, -5.5440477],
              [0., 1.799, -5.5440477],
              [0.5, 1.299, -5.5440477],
              [0.5, -1.299, -5.5440477]]))

    arb8s.append(np.array([[-0., 1.799, -10.0640477],
              [-0., -1.799, -10.0640477],
              [-0.5, -1.299, -10.0640477],
              [-0.5, 1.299, -10.0640477],
              [-0., 1.799, -5.5440477],
              [-0., -1.799, -5.5440477],
              [-0.5, -1.299, -5.5440477],
              [-0.5, 1.299, -5.5440477]]))

    arb8s.append(np.array([[0.52, -1.299, -10.0640477],
              [0.52, 1.299, -10.0640477],
              [1.02, 1.799, -10.0640477],
              [1.02, -1.799, -10.0640477],
              [0.52, -1.299, -5.5440477],
              [0.52, 1.299, -5.5440477],
              [1.02, 1.799, -5.5440477],
              [1.02, -1.799, -5.5440477]]))

    arb8s.append(np.array([[-0.52, 1.299, -10.0640477],
              [-0.52, -1.299, -10.0640477],
              [-1.02, -1.799, -10.0640477],
              [-1.02, 1.799, -10.0640477],
              [-0.52, 1.299, -5.5440477],
              [-0.52, -1.299, -5.5440477],
              [-1.02, -1.799, -5.5440477],
              [-1.02, 1.799, -5.5440477]]))

    arb8s.append(np.array([[0.5, 1.3, -10.0640477],
              [0., 1.8, -10.0640477],
              [1.02, 1.8, -10.0640477],
              [0.52, 1.3, -10.0640477],
              [0.5, 1.3, -5.5440477],
              [0., 1.8, -5.5440477],
              [1.02, 1.8, -5.5440477],
              [0.52, 1.3, -5.5440477]]))

    arb8s.append(np.array([[-0.52, 1.3, -10.0640477],
              [-1.02, 1.8, -10.0640477],
              [-0., 1.8, -10.0640477],
              [-0.5, 1.3, -10.0640477],
              [-0.52, 1.3, -5.5440477],
              [-1.02, 1.8, -5.5440477],
              [-0., 1.8, -5.5440477],
              [-0.5, 1.3, -5.5440477]]))

    arb8s.append(np.array([[0.52, -1.3, -10.0640477],
              [1.02, -1.8, -10.0640477],
              [0., -1.8, -10.0640477],
              [0.5, -1.3, -10.0640477],
              [0.52, -1.3, -5.5440477],
              [1.02, -1.8, -5.5440477],
              [0., -1.8, -5.5440477],
              [0.5, -1.3, -5.5440477]]))

    arb8s.append(np.array([[-0.5, -1.3, -10.0640477],
              [-0., -1.8, -10.0640477],
              [-1.02, -1.8, -10.0640477],
              [-0.52, -1.3, -10.0640477],
              [-0.5, -1.3, -5.5440477],
              [-0., -1.8, -5.5440477],
              [-1.02, -1.8, -5.5440477],
              [-0.52, -1.3, -5.5440477]]))

    arb8s.append(np.array([[0., -1.95744757, -5.3440477],
              [0., 1.95744757, -5.3440477],
              [0.70216476, 1.25528281, -5.3440477],
              [0.70216476, -1.25528281, -5.3440477],
              [0., -2.09849295, -4.89307861],
              [0., 2.09849295, -4.89307861],
              [0.96872421, 1.12976874, -4.89307861],
              [0.96872421, -1.12976874, -4.89307861]]))

    arb8s.append(np.array([[-0., 1.95744757, -5.3440477],
              [-0., -1.95744757, -5.3440477],
              [-0.70216476, -1.25528281, -5.3440477],
              [-0.70216476, 1.25528281, -5.3440477],
              [-0., 2.09849295, -4.89307861],
              [-0., -2.09849295, -4.89307861],
              [-0.96872421, -1.12976874, -4.89307861],
              [-0.96872421, 1.12976874, -4.89307861]]))

    arb8s.append(np.array([[0.78216476, -1.25528281, -5.3440477],
              [0.78216476, 1.25528281, -5.3440477],
              [1.48432953, 1.95744757, -5.3440477],
              [1.48432953, -1.95744757, -5.3440477],
              [1.04872421, -1.12976874, -4.89307861],
              [1.04872421, 1.12976874, -4.89307861],
              [2.01744843, 2.09849295, -4.89307861],
              [2.01744843, -2.09849295, -4.89307861]]))

    arb8s.append(np.array([[-0.78216476, 1.25528281, -5.3440477],
              [-0.78216476, -1.25528281, -5.3440477],
              [-1.48432953, -1.95744757, -5.3440477],
              [-1.48432953, 1.95744757, -5.3440477],
              [-1.04872421, 1.12976874, -4.89307861],
              [-1.04872421, -1.12976874, -4.89307861],
              [-2.01744843, -2.09849295, -4.89307861],
              [-2.01744843, 2.09849295, -4.89307861]]))

    arb8s.append(np.array([[0.70216476, 1.25628281, -5.3440477],
              [0., 1.95844757, -5.3440477],
              [1.48432953, 1.95844757, -5.3440477],
              [0.78216476, 1.25628281, -5.3440477],
              [0.96872421, 1.13076874, -4.89307861],
              [0., 2.09949295, -4.89307861],
              [2.01744843, 2.09949295, -4.89307861],
              [1.04872421, 1.13076874, -4.89307861]]))

    arb8s.append(np.array([[-0.78216476, 1.25628281, -5.3440477],
              [-1.48432953, 1.95844757, -5.3440477],
              [-0., 1.95844757, -5.3440477],
              [-0.70216476, 1.25628281, -5.3440477],
              [-1.04872421, 1.13076874, -4.89307861],
              [-2.01744843, 2.09949295, -4.89307861],
              [-0., 2.09949295, -4.89307861],
              [-0.96872421, 1.13076874, -4.89307861]]))

    arb8s.append(np.array([[0.78216476, -1.25628281, -5.3440477],
              [1.48432953, -1.95844757, -5.3440477],
              [0., -1.95844757, -5.3440477],
              [0.70216476, -1.25628281, -5.3440477],
              [1.04872421, -1.13076874, -4.89307861],
              [2.01744843, -2.09949295, -4.89307861],
              [0., -2.09949295, -4.89307861],
              [0.96872421, -1.13076874, -4.89307861]]))

    arb8s.append(np.array([[-0.70216476, -1.25628281, -5.3440477],
              [-0., -1.95844757, -5.3440477],
              [-1.48432953, -1.95844757, -5.3440477],
              [-0.78216476, -1.25628281, -5.3440477],
              [-0.96872421, -1.13076874, -4.89307861],
              [-0., -2.09949295, -4.89307861],
              [-2.01744843, -2.09949295, -4.89307861],
              [-1.04872421, -1.13076874, -4.89307861]]))

    arb8s.append(np.array([[0., -2.57880587, -4.79307861],
              [0., 2.57880587, -4.79307861],
              [0.53380573, 0.97738867, -4.79307861],
              [0.53380573, -0.97738867, -4.79307861],
              [0., -0.85207658, 2.11952271],
              [0., 0.85207658, 2.11952271],
              [0.15970166, 0.3729716, 2.11952271],
              [0.15970166, -0.3729716, 2.11952271]]))

    arb8s.append(np.array([[-0., 2.57880587, -4.79307861],
              [-0., -2.57880587, -4.79307861],
              [-0.53380573, -0.97738867, -4.79307861],
              [-0.53380573, 0.97738867, -4.79307861],
              [-0., 0.85207658, 2.11952271],
              [-0., -0.85207658, 2.11952271],
              [-0.15970166, -0.3729716, 2.11952271],
              [-0.15970166, 0.3729716, 2.11952271]]))

    arb8s.append(np.array([[1.02380573, -0.97738867, -4.79307861],
              [1.02380573, 0.97738867, -4.79307861],
              [2.62522293, 2.57880587, -4.79307861],
              [2.62522293, -2.57880587, -4.79307861],
              [0.28970166, -0.3729716, 2.11952271],
              [0.28970166, 0.3729716, 2.11952271],
              [0.76880665, 0.85207658, 2.11952271],
              [0.76880665, -0.85207658, 2.11952271]]))

    arb8s.append(np.array([[-1.02380573, 0.97738867, -4.79307861],
              [-1.02380573, -0.97738867, -4.79307861],
              [-2.62522293, -2.57880587, -4.79307861],
              [-2.62522293, 2.57880587, -4.79307861],
              [-0.28970166, 0.3729716, 2.11952271],
              [-0.28970166, -0.3729716, 2.11952271],
              [-0.76880665, -0.85207658, 2.11952271],
              [-0.76880665, 0.85207658, 2.11952271]]))

    arb8s.append(np.array([[0.53380573, 0.97838867, -4.79307861],
              [0., 2.57980587, -4.79307861],
              [2.62522293, 2.57980587, -4.79307861],
              [1.02380573, 0.97838867, -4.79307861],
              [0.15970166, 0.3739716, 2.11952271],
              [0., 0.85307658, 2.11952271],
              [0.76880665, 0.85307658, 2.11952271],
              [0.28970166, 0.3739716, 2.11952271]]))

    arb8s.append(np.array([[-1.02380573, 0.97838867, -4.79307861],
              [-2.62522293, 2.57980587, -4.79307861],
              [-0., 2.57980587, -4.79307861],
              [-0.53380573, 0.97838867, -4.79307861],
              [-0.28970166, 0.3739716, 2.11952271],
              [-0.76880665, 0.85307658, 2.11952271],
              [-0., 0.85307658, 2.11952271],
              [-0.15970166, 0.3739716, 2.11952271]]))

    arb8s.append(np.array([[1.02380573, -0.97838867, -4.79307861],
              [2.62522293, -2.57980587, -4.79307861],
              [0., -2.57980587, -4.79307861],
              [0.53380573, -0.97838867, -4.79307861],
              [0.28970166, -0.3739716, 2.11952271],
              [0.76880665, -0.85307658, 2.11952271],
              [0., -0.85307658, 2.11952271],
              [0.15970166, -0.3739716, 2.11952271]]))

    arb8s.append(np.array([[-0.53380573, -0.97838867, -4.79307861],
              [-0., -2.57980587, -4.79307861],
              [-2.62522293, -2.57980587, -4.79307861],
              [-1.02380573, -0.97838867, -4.79307861],
              [-0.15970166, -0.3739716, 2.11952271],
              [-0., -0.85307658, 2.11952271],
              [-0.76880665, -0.85307658, 2.11952271],
              [-0.28970166, -0.3739716, 2.11952271]]))

    arb8s.append(np.array([[0., -0.64228751, 4.98177521],
              [0., 0.64228751, 4.98177521],
              [0.05650604, 0.58578146, 4.98177521],
              [0.05650604, -0.58578146, 4.98177521],
              [0., -1.70020804, 8.75081543],
              [0., 1.70020804, 8.75081543],
              [0.84914894, 0.8510591, 8.75081543],
              [0.84914894, -0.8510591, 8.75081543]]))

    arb8s.append(np.array([[-0., 0.64228751, 4.98177521],
              [-0., -0.64228751, 4.98177521],
              [-0.05650604, -0.58578146, 4.98177521],
              [-0.05650604, 0.58578146, 4.98177521],
              [-0., 1.70020804, 8.75081543],
              [-0., -1.70020804, 8.75081543],
              [-0.84914894, -0.8510591, 8.75081543],
              [-0.84914894, 0.8510591, 8.75081543]]))

    arb8s.append(np.array([[0.36650604, -0.58578146, 4.98177521],
              [0.36650604, 0.58578146, 4.98177521],
              [0.42301208, 0.64228751, 4.98177521],
              [0.42301208, -0.64228751, 4.98177521],
              [0.91914894, -0.8510591, 8.75081543],
              [0.91914894, 0.8510591, 8.75081543],
              [1.76829788, 1.70020804, 8.75081543],
              [1.76829788, -1.70020804, 8.75081543]]))

    arb8s.append(np.array([[-0.36650604, 0.58578146, 4.98177521],
              [-0.36650604, -0.58578146, 4.98177521],
              [-0.42301208, -0.64228751, 4.98177521],
              [-0.42301208, 0.64228751, 4.98177521],
              [-0.91914894, 0.8510591, 8.75081543],
              [-0.91914894, -0.8510591, 8.75081543],
              [-1.76829788, -1.70020804, 8.75081543],
              [-1.76829788, 1.70020804, 8.75081543]]))

    arb8s.append(np.array([[0.05650604, 0.58678146, 4.98177521],
              [0., 0.64328751, 4.98177521],
              [0.42301208, 0.64328751, 4.98177521],
              [0.36650604, 0.58678146, 4.98177521],
              [0.84914894, 0.8520591, 8.75081543],
              [0., 1.70120804, 8.75081543],
              [1.76829788, 1.70120804, 8.75081543],
              [0.91914894, 0.8520591, 8.75081543]]))

    arb8s.append(np.array([[-0.36650604, 0.58678146, 4.98177521],
              [-0.42301208, 0.64328751, 4.98177521],
              [-0., 0.64328751, 4.98177521],
              [-0.05650604, 0.58678146, 4.98177521],
              [-0.91914894, 0.8520591, 8.75081543],
              [-1.76829788, 1.70120804, 8.75081543],
              [-0., 1.70120804, 8.75081543],
              [-0.84914894, 0.8520591, 8.75081543]]))

    arb8s.append(np.array([[0.36650604, -0.58678146, 4.98177521],
              [0.42301208, -0.64328751, 4.98177521],
              [0., -0.64328751, 4.98177521],
              [0.05650604, -0.58678146, 4.98177521],
              [0.91914894, -0.8520591, 8.75081543],
              [1.76829788, -1.70120804, 8.75081543],
              [0., -1.70120804, 8.75081543],
              [0.84914894, -0.8520591, 8.75081543]]))

    arb8s.append(np.array([[-0.05650604, -0.58678146, 4.98177521],
              [-0., -0.64328751, 4.98177521],
              [-0.42301208, -0.64328751, 4.98177521],
              [-0.36650604, -0.58678146, 4.98177521],
              [-0.84914894, -0.8520591, 8.75081543],
              [-0., -1.70120804, 8.75081543],
              [-1.76829788, -1.70120804, 8.75081543],
              [-0.91914894, -0.8520591, 8.75081543]]))

    arb8s.append(np.array([[0., -1.27213526, 8.85081543],
              [0., 1.27213526, 8.85081543],
              [0.04522739, 1.22690787, 8.85081543],
              [0.04522739, -1.22690787, 8.85081543],
              [0., -1.35144762, 12.34958069],
              [0., 1.35144762, 12.34958069],
              [0.24443707, 1.10701056, 12.34958069],
              [0.24443707, -1.10701056, 12.34958069]]))

    arb8s.append(np.array([[-0., 1.27213526, 8.85081543],
              [-0., -1.27213526, 8.85081543],
              [-0.04522739, -1.22690787, 8.85081543],
              [-0.04522739, 1.22690787, 8.85081543],
              [-0., 1.35144762, 12.34958069],
              [-0., -1.35144762, 12.34958069],
              [-0.24443707, -1.10701056, 12.34958069],
              [-0.24443707, 1.10701056, 12.34958069]]))

    arb8s.append(np.array([[0.59522739, -1.22690787, 8.85081543],
              [0.59522739, 1.22690787, 8.85081543],
              [0.64045479, 1.27213526, 8.85081543],
              [0.64045479, -1.27213526, 8.85081543],
              [0.84443707, -1.10701056, 12.34958069],
              [0.84443707, 1.10701056, 12.34958069],
              [1.08887413, 1.35144762, 12.34958069],
              [1.08887413, -1.35144762, 12.34958069]]))

    arb8s.append(np.array([[-0.59522739, 1.22690787, 8.85081543],
              [-0.59522739, -1.22690787, 8.85081543],
              [-0.64045479, -1.27213526, 8.85081543],
              [-0.64045479, 1.27213526, 8.85081543],
              [-0.84443707, 1.10701056, 12.34958069],
              [-0.84443707, -1.10701056, 12.34958069],
              [-1.08887413, -1.35144762, 12.34958069],
              [-1.08887413, 1.35144762, 12.34958069]]))

    arb8s.append(np.array([[0.04522739, 1.22790787, 8.85081543],
              [0., 1.27313526, 8.85081543],
              [0.64045479, 1.27313526, 8.85081543],
              [0.59522739, 1.22790787, 8.85081543],
              [0.24443707, 1.10801056, 12.34958069],
              [0., 1.35244762, 12.34958069],
              [1.08887413, 1.35244762, 12.34958069],
              [0.84443707, 1.10801056, 12.34958069]]))

    arb8s.append(np.array([[-0.59522739, 1.22790787, 8.85081543],
              [-0.64045479, 1.27313526, 8.85081543],
              [-0., 1.27313526, 8.85081543],
              [-0.04522739, 1.22790787, 8.85081543],
              [-0.84443707, 1.10801056, 12.34958069],
              [-1.08887413, 1.35244762, 12.34958069],
              [-0., 1.35244762, 12.34958069],
              [-0.24443707, 1.10801056, 12.34958069]]))

    arb8s.append(np.array([[0.59522739, -1.22790787, 8.85081543],
              [0.64045479, -1.27313526, 8.85081543],
              [0., -1.27313526, 8.85081543],
              [0.04522739, -1.22790787, 8.85081543],
              [0.84443707, -1.10801056, 12.34958069],
              [1.08887413, -1.35244762, 12.34958069],
              [0., -1.35244762, 12.34958069],
              [0.24443707, -1.10801056, 12.34958069]]))

    arb8s.append(np.array([[-0.04522739, -1.22790787, 8.85081543],
              [-0., -1.27313526, 8.85081543],
              [-0.64045479, -1.27313526, 8.85081543],
              [-0.59522739, -1.22790787, 8.85081543],
              [-0.24443707, -1.10801056, 12.34958069],
              [-0., -1.35244762, 12.34958069],
              [-1.08887413, -1.35244762, 12.34958069],
              [-0.84443707, -1.10801056, 12.34958069]]))

    arb8s.append(np.array([[0., -1.08865713, 12.44958069],
              [0., 1.08865713, 12.44958069],
              [0.1207389, 0.96791823, 12.44958069],
              [0.1207389, -0.96791823, 12.44958069],
              [0., -2.41834315, 18.1],
              [0., 2.41834315, 18.1],
              [0.56630238, 1.85204077, 18.1],
              [0.56630238, -1.85204077, 18.1]]))

    arb8s.append(np.array([[-0., 1.08865713, 12.44958069],
              [-0., -1.08865713, 12.44958069],
              [-0.1207389, -0.96791823, 12.44958069],
              [-0.1207389, 0.96791823, 12.44958069],
              [-0., 2.41834315, 18.1],
              [-0., -2.41834315, 18.1],
              [-0.56630238, -1.85204077, 18.1],
              [-0.56630238, 1.85204077, 18.1]]))

    arb8s.append(np.array([[0.1907389, -0.96791823, 12.44958069],
              [0.1907389, 0.96791823, 12.44958069],
              [0.31147779, 1.08865713, 12.44958069],
              [0.31147779, -1.08865713, 12.44958069],
              [1.09630238, -1.85204077, 18.1],
              [1.09630238, 1.85204077, 18.1],
              [1.66260475, 2.41834315, 18.1],
              [1.66260475, -2.41834315, 18.1]]))

    arb8s.append(np.array([[-0.1907389, 0.96791823, 12.44958069],
              [-0.1907389, -0.96791823, 12.44958069],
              [-0.31147779, -1.08865713, 12.44958069],
              [-0.31147779, 1.08865713, 12.44958069],
              [-1.09630238, 1.85204077, 18.1],
              [-1.09630238, -1.85204077, 18.1],
              [-1.66260475, -2.41834315, 18.1],
              [-1.66260475, 2.41834315, 18.1]]))

    arb8s.append(np.array([[0.1207389, 0.96891823, 12.44958069],
              [0., 1.08965713, 12.44958069],
              [0.31147779, 1.08965713, 12.44958069],
              [0.1907389, 0.96891823, 12.44958069],
              [0.56630238, 1.85304077, 18.1],
              [0., 2.41934315, 18.1],
              [1.66260475, 2.41934315, 18.1],
              [1.09630238, 1.85304077, 18.1]]))

    arb8s.append(np.array([[-0.1907389, 0.96891823, 12.44958069],
              [-0.31147779, 1.08965713, 12.44958069],
              [-0., 1.08965713, 12.44958069],
              [-0.1207389, 0.96891823, 12.44958069],
              [-1.09630238, 1.85304077, 18.1],
              [-1.66260475, 2.41934315, 18.1],
              [-0., 2.41934315, 18.1],
              [-0.56630238, 1.85304077, 18.1]]))

    arb8s.append(np.array([[0.1907389, -0.96891823, 12.44958069],
              [0.31147779, -1.08965713, 12.44958069],
              [0., -1.08965713, 12.44958069],
              [0.1207389, -0.96891823, 12.44958069],
              [1.09630238, -1.85304077, 18.1],
              [1.66260475, -2.41934315, 18.1],
              [0., -2.41934315, 18.1],
              [0.56630238, -1.85304077, 18.1]]))

    arb8s.append(np.array([[-0.1207389, -0.96891823, 12.44958069],
              [-0., -1.08965713, 12.44958069],
              [-0.31147779, -1.08965713, 12.44958069],
              [-0.1907389, -0.96891823, 12.44958069],
              [-0.56630238, -1.85304077, 18.1],
              [-0., -2.41934315, 18.1],
              [-1.66260475, -2.41934315, 18.1],
              [-1.09630238, -1.85304077, 18.1]]))

    arb8s.append(np.array([[0., -2.41834315, 18.1],
              [0., 2.41834315, 18.1],
              [0.56630238, 1.85204077, 18.1],
              [0.56630238, -1.85204077, 18.1],
              [0., -2.41834315, 18.3],
              [0., 2.41834315, 18.3],
              [0.56630238, 1.85204077, 18.3],
              [0.56630238, -1.85204077, 18.3]]))

    arb8s.append(np.array([[-0., 2.41834315, 18.1],
              [-0., -2.41834315, 18.1],
              [-0.56630238, -1.85204077, 18.1],
              [-0.56630238, 1.85204077, 18.1],
              [-0., 2.41834315, 18.3],
              [-0., -2.41834315, 18.3],
              [-0.56630238, -1.85204077, 18.3],
              [-0.56630238, 1.85204077, 18.3]]))

    arb8s.append(np.array([[1.09495819, -1.85204077, 18.1],
              [1.09495819, 1.85204077, 18.1],
              [1.66126057, 2.41834315, 18.1],
              [1.66126057, -2.41834315, 18.1],
              [1.09495819, -1.85204077, 18.3],
              [1.09495819, 1.85204077, 18.3],
              [1.66126057, 2.41834315, 18.3],
              [1.66126057, -2.41834315, 18.3]]))

    arb8s.append(np.array([[-1.09495819, 1.85204077, 18.1],
              [-1.09495819, -1.85204077, 18.1],
              [-1.66126057, -2.41834315, 18.1],
              [-1.66126057, 2.41834315, 18.1],
              [-1.09495819, 1.85204077, 18.3],
              [-1.09495819, -1.85204077, 18.3],
              [-1.66126057, -2.41834315, 18.3],
              [-1.66126057, 2.41834315, 18.3]]))

    arb8s.append(np.array([[0.56630238, 1.85304077, 18.1],
              [0., 2.41934315, 18.1],
              [1.66126057, 2.41934315, 18.1],
              [1.09495819, 1.85304077, 18.1],
              [0.56630238, 1.85304077, 18.3],
              [0., 2.41934315, 18.3],
              [1.66126057, 2.41934315, 18.3],
              [1.09495819, 1.85304077, 18.3]]))

    arb8s.append(np.array([[-1.09495819, 1.85304077, 18.1],
              [-1.66126057, 2.41934315, 18.1],
              [-0., 2.41934315, 18.1],
              [-0.56630238, 1.85304077, 18.1],
              [-1.09495819, 1.85304077, 18.3],
              [-1.66126057, 2.41934315, 18.3],
              [-0., 2.41934315, 18.3],
              [-0.56630238, 1.85304077, 18.3]]))

    arb8s.append(np.array([[1.09495819, -1.85304077, 18.1],
              [1.66126057, -2.41934315, 18.1],
              [0., -2.41934315, 18.1],
              [0.56630238, -1.85304077, 18.1],
              [1.09495819, -1.85304077, 18.3],
              [1.66126057, -2.41934315, 18.3],
              [0., -2.41934315, 18.3],
              [0.56630238, -1.85304077, 18.3]]))

    arb8s.append(np.array([[-0.56630238, -1.85304077, 18.1],
              [-0., -2.41934315, 18.1],
              [-1.66126057, -2.41934315, 18.1],
              [-1.09495819, -1.85304077, 18.1],
              [-0.56630238, -1.85304077, 18.3],
              [-0., -2.41934315, 18.3],
              [-1.66126057, -2.41934315, 18.3],
              [-1.09495819, -1.85304077, 18.3]]))

    x = np.array(arb8s)

    return x

def get_blocks_hash(geo:torch.tensor,grid_dims = (100, 100, 1000),grid_lims = ((-5, 5), (-5, 5), (0, 40))):
    x_lim, y_lim, z_lim = grid_lims
    numel_grid = grid_dims[0] * grid_dims[1] * grid_dims[2]
    grid_size_x = (x_lim[1] - x_lim[0]) / grid_dims[0]
    grid_size_y = (y_lim[1] - y_lim[0]) / grid_dims[1]
    grid_size_z = (z_lim[1] - z_lim[0]) / grid_dims[2]

    min_x = geo[:,:,0].min(-1).values - grid_size_x
    max_x = geo[:,:,0].max(-1).values + grid_size_x
    min_y = geo[:,:,1].min(-1).values - grid_size_y
    max_y = geo[:,:,1].max(-1).values + grid_size_y
    min_z = geo[:,:,2].min(-1).values - grid_size_z
    max_z = geo[:,:,2].max(-1).values + grid_size_z

    a_positions = torch.meshgrid(
    torch.linspace(x_lim[0], x_lim[1], grid_dims[0]),
    torch.linspace(y_lim[0], y_lim[1], grid_dims[1]),
    torch.linspace(z_lim[0], z_lim[1], grid_dims[2]),
    indexing='ij'
    )

    voxel_indices = []
    block_ids = []

    for i in range(len(geo)):
        candidate_mask = ((a_positions[0] >= min_x[i]) & (a_positions[0] <= max_x[i]) &
                        (a_positions[1] >= min_y[i]) & (a_positions[1] <= max_y[i]) &
                        (a_positions[2] >= min_z[i]) & (a_positions[2] <= max_z[i]))
        voxel_indices_for_block = torch.nonzero(candidate_mask.flatten(), as_tuple=True)[0]
        
        if len(voxel_indices_for_block) > 0:
            voxel_indices.append(voxel_indices_for_block)
            block_ids.append(torch.full_like(voxel_indices_for_block, fill_value=i))

    if len(voxel_indices) > 0:
        voxel_indices = torch.cat(voxel_indices)
        block_ids = torch.cat(block_ids)
    else:
        voxel_indices = torch.tensor([], dtype=torch.long)
        block_ids = torch.tensor([], dtype=torch.long)

    voxel_indices, sorted_indices = torch.sort(voxel_indices)
    block_ids = block_ids[sorted_indices]
    voxel_offsets = torch.zeros(numel_grid + 1, dtype=torch.int32)

    voxel_indices, counts = torch.unique_consecutive(voxel_indices, return_counts=True)
    voxel_offsets.scatter_add_(0, voxel_indices + 1, counts.to(torch.int32))
    voxel_offsets = torch.cumsum(voxel_offsets, dim=0)
    return voxel_offsets, block_ids